import sys
import tkinter as tk
import tkinter.ttk as ttk

class PoupancaExibir:
    def __init__(self):
        global root
        root = tk.Tk()

        windowWidth = root.winfo_reqwidth()
        windowHeight = root.winfo_reqheight()
        X = int(root.winfo_screenwidth()/2 - windowWidth/2)
        Y = int(root.winfo_screenheight()/3 - windowHeight/2)
        X = int(X * 0.9)
        Y = int(Y * 0.9)

        _bgcolor = '#d9d9d9'  # X11 color: 'gray85'
        _fgcolor = '#000000'  # X11 color: 'black'
        _compcolor = '#d9d9d9' # X11 color: 'gray85'
        _ana1color = '#d9d9d9' # X11 color: 'gray85'
        _ana2color = '#ececec' # Closest X11 color: 'gray92'

        self.style = ttk.Style()
        if sys.platform == "win32":
            self.style.theme_use('winnative')
        self.style.configure('.',background=_bgcolor)
        self.style.configure('.',foreground=_fgcolor)
        self.style.configure('.',font="TkDefaultFont")
        self.style.map('.',background=[('selected', _compcolor), ('active',_ana2color)])

        root.geometry("465x352+{}+{}".format(X, Y))
        root.minsize(120, 1)
        root.maxsize(3844, 1061)
        root.resizable(1, 1)
        root.title("Exibindo usuário")
        root.configure(background="#d9d9d9")
        root.configure(highlightbackground="#d9d9d9")
        root.configure(highlightcolor="black")

        self.TFrame1Exibir = ttk.Frame(root)
        self.TFrame1Exibir.place(relx=0.013, rely=0.02, relheight=0.949, relwidth=0.974)
        self.TFrame1Exibir.configure(relief='groove')
        self.TFrame1Exibir.configure(borderwidth="2")
        self.TFrame1Exibir.configure(relief="groove")

        self.BotaoRetornar = ttk.Button(self.TFrame1Exibir, command=lambda: self.encerrar())
        self.BotaoRetornar.place(relx=0.397, rely=0.838, height=32, width=80)
        self.BotaoRetornar.configure(takefocus="")
        self.BotaoRetornar.configure(text='''Retornar''')
        self.BotaoRetornar.configure(compound='center')
        self.BotaoRetornar.configure(cursor="hand2")

        self.labelTitular = ttk.Label(self.TFrame1Exibir)
        self.labelTitular.place(relx=0.177, rely=0.057, height=63, width=132)
        self.labelTitular.configure(background="#d9d9d9")
        self.labelTitular.configure(foreground="#000000")
        self.labelTitular.configure(font="-family {Yu Gothic} -size 12")
        self.labelTitular.configure(relief="flat")
        self.labelTitular.configure(anchor='n')
        self.labelTitular.configure(justify='left')
        self.labelTitular.configure(text='''Nome do titular:''')

        self.labelDataAbert = ttk.Label(self.TFrame1Exibir)
        self.labelDataAbert.place(relx=0.155, rely=0.15, height=45, width=143)
        self.labelDataAbert.configure(background="#d9d9d9")
        self.labelDataAbert.configure(foreground="#000000")
        self.labelDataAbert.configure(font="-family {Yu Gothic} -size 12")
        self.labelDataAbert.configure(relief="flat")
        self.labelDataAbert.configure(anchor='n')
        self.labelDataAbert.configure(justify='left')
        self.labelDataAbert.configure(text='''Data de abertura:''')

        self.labelNumAgencia = ttk.Label(self.TFrame1Exibir)
        self.labelNumAgencia.place(relx=0.126, rely=0.359, height=44, width=153)
        self.labelNumAgencia.configure(background="#d9d9d9")
        self.labelNumAgencia.configure(foreground="#000000")
        self.labelNumAgencia.configure(font="-family {Yu Gothic} -size 12")
        self.labelNumAgencia.configure(relief="flat")
        self.labelNumAgencia.configure(anchor='n')
        self.labelNumAgencia.configure(justify='left')
        self.labelNumAgencia.configure(text='''Número da agência:''')

        self.labelNumConta = ttk.Label(self.TFrame1Exibir)
        self.labelNumConta.place(relx=0.146, rely=0.458, height=46, width=151)
        self.labelNumConta.configure(background="#d9d9d9")
        self.labelNumConta.configure(foreground="#000000")
        self.labelNumConta.configure(font="-family {Yu Gothic} -size 12")
        self.labelNumConta.configure(relief="flat")
        self.labelNumConta.configure(anchor='n')
        self.labelNumConta.configure(justify='left')
        self.labelNumConta.configure(text='''Número da conta:''')

        self.labelSaldo = ttk.Label(self.TFrame1Exibir)
        self.labelSaldo.place(relx=0.155, rely=0.539, height=46, width=141)
        self.labelSaldo.configure(background="#d9d9d9")
        self.labelSaldo.configure(foreground="#000000")
        self.labelSaldo.configure(font="-family {Yu Gothic} -size 12")
        self.labelSaldo.configure(relief="flat")
        self.labelSaldo.configure(anchor='e')
        self.labelSaldo.configure(justify='left')
        self.labelSaldo.configure(text='''Saldo:''')

        self.ExibirNome = ttk.Label(self.TFrame1Exibir)
        self.ExibirNome.place(relx=0.486, rely=0.06, height=25, width=217)
        self.ExibirNome.configure(background="#d9d9d9")
        self.ExibirNome.configure(foreground="#000000")
        self.ExibirNome.configure(font="TkDefaultFont")
        self.ExibirNome.configure(relief="flat")
        self.ExibirNome.configure(anchor='w')
        self.ExibirNome.configure(justify='left')
        self.ExibirNome.configure(text='''Tlabel''')

        self.ExibirDataAbert = ttk.Label(self.TFrame1Exibir)
        self.ExibirDataAbert.place(relx=0.486, rely=0.15, height=25, width=207)
        self.ExibirDataAbert.configure(background="#d9d9d9")
        self.ExibirDataAbert.configure(foreground="#000000")
        self.ExibirDataAbert.configure(font="TkDefaultFont")
        self.ExibirDataAbert.configure(relief="flat")
        self.ExibirDataAbert.configure(anchor='w')
        self.ExibirDataAbert.configure(justify='left')
        self.ExibirDataAbert.configure(text='''Tlabel''')

        self.ExibirDataVenc = ttk.Label(self.TFrame1Exibir)
        self.ExibirDataVenc.place(relx=0.486, rely=0.257, height=25, width=207)
        self.ExibirDataVenc.configure(background="#d9d9d9")
        self.ExibirDataVenc.configure(foreground="#000000")
        self.ExibirDataVenc.configure(font="TkDefaultFont")
        self.ExibirDataVenc.configure(relief="flat")
        self.ExibirDataVenc.configure(anchor='w')
        self.ExibirDataVenc.configure(justify='left')
        self.ExibirDataVenc.configure(text='''Tlabel''')

        self.ExibirNumAgencia = ttk.Label(self.TFrame1Exibir)
        self.ExibirNumAgencia.place(relx=0.486, rely=0.359, height=27, width=196)
        self.ExibirNumAgencia.configure(background="#d9d9d9")
        self.ExibirNumAgencia.configure(foreground="#000000")
        self.ExibirNumAgencia.configure(font="TkDefaultFont")
        self.ExibirNumAgencia.configure(relief="flat")
        self.ExibirNumAgencia.configure(anchor='w')
        self.ExibirNumAgencia.configure(justify='left')
        self.ExibirNumAgencia.configure(text='''Tlabel''')

        self.ExibirNumConta = ttk.Label(self.TFrame1Exibir)
        self.ExibirNumConta.place(relx=0.486, rely=0.464, height=26, width=196)
        self.ExibirNumConta.configure(background="#d9d9d9")
        self.ExibirNumConta.configure(foreground="#000000")
        self.ExibirNumConta.configure(font="TkDefaultFont")
        self.ExibirNumConta.configure(relief="flat")
        self.ExibirNumConta.configure(anchor='w')
        self.ExibirNumConta.configure(justify='left')
        self.ExibirNumConta.configure(text='''Tlabel''')

        self.labelRendimento = ttk.Label(self.TFrame1Exibir)
        self.labelRendimento.place(relx=0.14, rely=0.671, height=26, width=150)
        self.labelRendimento.configure(background="#d9d9d9")
        self.labelRendimento.configure(foreground="#000000")
        self.labelRendimento.configure(font="-family {Yu Gothic} -size 12")
        self.labelRendimento.configure(relief="flat")
        self.labelRendimento.configure(anchor='n')
        self.labelRendimento.configure(justify='left')
        self.labelRendimento.configure(text='''Dia de rendimento:''')

        self.ExibirSaldo = ttk.Label(self.TFrame1Exibir)
        self.ExibirSaldo.place(relx=0.486, rely=0.569, height=26, width=207)
        self.ExibirSaldo.configure(background="#d9d9d9")
        self.ExibirSaldo.configure(foreground="#000000")
        self.ExibirSaldo.configure(font="TkDefaultFont")
        self.ExibirSaldo.configure(relief="flat")
        self.ExibirSaldo.configure(anchor='w')
        self.ExibirSaldo.configure(justify='left')
        self.ExibirSaldo.configure(text='''Tlabel''')

        self.ExibirRendimento = ttk.Label(self.TFrame1Exibir)
        self.ExibirRendimento.place(relx=0.486, rely=0.674, height=26, width=197)
        self.ExibirRendimento.configure(background="#d9d9d9")
        self.ExibirRendimento.configure(foreground="#000000")
        self.ExibirRendimento.configure(font="TkDefaultFont")
        self.ExibirRendimento.configure(relief="flat")
        self.ExibirRendimento.configure(anchor='w')
        self.ExibirRendimento.configure(justify='left')
        self.ExibirRendimento.configure(text='''Tlabel''')

        self.labelDataVencimento = ttk.Label(self.TFrame1Exibir)
        self.labelDataVencimento.place(relx=0.11, rely=0.254, height=35, width=163)
        self.labelDataVencimento.configure(background="#d9d9d9")
        self.labelDataVencimento.configure(foreground="#000000")
        self.labelDataVencimento.configure(font="-family {Yu Gothic} -size 12")
        self.labelDataVencimento.configure(relief="flat")
        self.labelDataVencimento.configure(anchor='n')
        self.labelDataVencimento.configure(justify='left')
        self.labelDataVencimento.configure(text='''Dia de vencimento:''')

        self.menubar = tk.Menu(root,font="TkMenuFont",bg=_bgcolor,fg=_fgcolor)
        root.configure(menu = self.menubar)

    def iniciar(self, nome, dataAbert, dataVenc, numAgencia, numConta, saldo, rendimento):
        self.ExibirNome.configure(text=nome)
        self.ExibirDataAbert.configure(text=dataAbert)
        self.ExibirDataVenc.configure(text=dataVenc)
        self.ExibirNumAgencia.configure(text=numAgencia)
        self.ExibirNumConta.configure(text=numConta)
        self.ExibirSaldo.configure(text=saldo)
        self.ExibirRendimento.configure(text="Todo dia " + rendimento)    
        root.mainloop()

    def encerrar(self):
        root.destroy()